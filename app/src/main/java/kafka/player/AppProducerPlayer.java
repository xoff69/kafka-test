/*
 * This source file was generated by the Gradle 'init' task
 */

package kafka.player;

import java.util.List;
import java.util.Properties;
import org.apache.kafka.clients.producer.KafkaProducer;
import org.apache.kafka.clients.producer.Producer;
import org.apache.kafka.clients.producer.ProducerConfig;
import org.apache.kafka.clients.producer.ProducerRecord;
import org.apache.kafka.common.serialization.StringSerializer;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
public class AppProducerPlayer {
  public static void main(String[] args) {

    Properties properties = new Properties();
    properties.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9092");
    properties.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);
    properties.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class);

    Producer<String, String> producer = new KafkaProducer<>(properties);
    ObjectMapper objectMapper = new ObjectMapper();

    PlayerParser playerParser=new PlayerParser();
    List<CommonPlayer> players= playerParser.parse();
    long id=1L;
    for (CommonPlayer player : players) {

      player.setId(id++);
      // envoyer au productuer

      try {
        String jsonPlayer = objectMapper.writeValueAsString(player);
        System.out.println(jsonPlayer); // Affiche l'objet CommonPlayerEntity en JSON


        ProducerRecord<String, String> record = new ProducerRecord<>("topic-player", null, jsonPlayer);

        producer.send(record);
        producer.flush();

      } catch (JsonProcessingException e) {
        e.printStackTrace(); // Gestion de l'erreur en cas de probl√®me de conversion
      }
    }
    System.out.println("db insert players done "+players.size());





  }

}
